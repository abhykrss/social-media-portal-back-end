
app.get("/linkedinlogin", (req, res) => {
  return res.redirect(
    encodeURI(
      `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${process.env.LINKEDIN_CLIENT_ID}&scope=r_liteprofile&state=*&redirect_uri=${process.env.LINKEDIN_REDIRECT_URI}`
    )
  );
});

app.get("/linkedinlogin/success", async (req, res) => {
  const payload = {
    client_id: process.env.LINKEDIN_CLIENT_ID,
    client_secret: process.env.LINKEDIN_CLIENT_SECRET,
    redirect_uri: process.env.LINKEDIN_REDIRECT_URI,
    grant_type: "authorization_code",
    code: req.query.code,
  };

  await axios({
    url: `https://www.linkedin.com/oauth/v2/accessToken?${QueryString.stringify(
      payload
    )}`,
    method: "POST",
    headers: {
      "Content-Type": "x-www-form-urlencoded",
    },
  })
    .then((response) => {
      authToken = response.data.access_token;
    })
    .catch((err) => {
      console.log(err);
    });
  res.redirect("https://localhost:3000");
});


///\ image


app.post("/postArticle/Image", (req, res) => {
  axios({
    url: "https://api.linkedin.com/v2/ugcPosts",
    method: "POST",
    data: {
      author: `urn:li:person:${req.body.id}`,
      lifecycleState: "PUBLISHED",
      specificContent: {
        "com.linkedin.ugc.ShareContent": {
          shareCommentary: {
            text: req.body.text,
          },
          shareMediaCategory: "IMAGE",
          media: [
            {
              status: "READY",
              media: req.body.asset,
              description: {
                text: req.body.content,
              },
              title: {
                text: req.body.title,
              },
            },
          ],
        },
      },
      visibility: {
        "com.linkedin.ugc.MemberNetworkVisibility": req.body.scope,
      },
    },
    headers: {
      Authorization: "Bearer " + req.body.accessToken,
    },
  })
    .then((response) => {
      console.log(response);
      res.send("completed");
    })
    .catch((e) => {
      console.log(e);
      res.send("Error");
    });
});

app.post("/postImageStepOne", (req, res) => {
  axios({
    url: "https://api.linkedin.com/v2/assets?action=registerUpload",
    method: "POST",
    data: {
      registerUploadRequest: {
        recipes: ["urn:li:digitalmediaRecipe:feedshare-image"],
        owner: `urn:li:person:${req.body.id}`,
        serviceRelationships: [
          {
            relationshipType: "OWNER",
            identifier: "urn:li:userGeneratedContent",
          },
        ],
      },
    },
    headers: {
      Authorization: "Bearer " + req.body.accessToken,
    },
  })
    .then((response) => {
      res.send(response.data);
    })
    .catch((err) => {
      res.send(err);
    });
});

app.post("/imageUpload", (req, res) => {
  console.log(req.body);
  axios({
    url: req.body.url,
    method: "POST",
    data: req.body.img,
    headers: {
      Authorization: "Bearer " + req.body.accessToken,
    },
  })
    .then(() => {
      res.send(response.statusCode);
    })
    .catch((err) => {
      res.send(err);
    });
});














let uploadUrl = "";
  let asset = "";
  const data = {
    id: userLoginData.id,
    accessToken: userLoginData.access_token,
  };
  //console.log(data);
  const uploadUrlGenerate = () => {
    axios.post("/postImageStepOne", data).then((res) => {
      uploadUrl =
        res.data.value.uploadMechanism[
          "com.linkedin.digitalmedia.uploading.MediaUploadHttpRequest"
        ].uploadUrl;
      asset = res.data.value.asset;
      //console.log(res.data);
    });
  };

  const onFinish = (values: object) => {
    const data = {
      id: userLoginData.id,
      accessToken: userLoginData.access_token,
      asset: asset,
      ...values,
    };
    console.log(data);
    axios({
      method: "POST",
      url: "/postArticle/Image",
      data: data,
    })
      .then((response) => {
        if (response.data === "completed") {
          console.log(response.data);
        }
      })
      .catch((err) => {
        console.log(err);
      });
  };
  const imgUpload = (e: any) => {
    axios({
      url: "/imageUpload",
      method: "POST",
      data: {
        url: uploadUrl,
        accessToken: userLoginData.access_token,
        img: e.file,
      },
    })
      .then((res) => console.log(res))
      .catch((e) => console.log(e));
  };